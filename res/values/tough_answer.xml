<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string-array name="tough_answer">
        <item>Data stored options in Android:"\n\n"1. SharedPrefernces"\n"2. local cache"\n"3. Internal storage"\n"4. External storage"\n"5. SQLite storage"\n"6. Content Provider"\n"7. Network connection"\n""\n\n"✓ Shared preferences: Private data stored in key-value pairs."\n\n"✓ Internal storage :  A location for saving files on the device. Files stored in internal storage are private to your application by default, and other applications cannot access them. (Neither can the user, except by using your application.) When the application is uninstalled, the private files are deleted as well."\n\n"✓ Local cache:  The internal data directory for caching data rather than storing it persistently. Cached files may be deleted at any time. You use the getCacheDir() method, available on the Activity or Context objects in Android."\n\n"If you store data in an internal data directory and the internal storage space begins to run low, Android may delete files to reclaim space. Don’t rely on Android to delete your files for you though! You should delete your cache files yourself to stay within a reasonable limit (about 1 MB) of space consumed in the cache directory."\n\n"✓ External storage : Every Android device supports shared external storage for files — either removable storage, such as a Secure Digital card (SD card) or nonremovable storage. Files saved to external storage are public (any person or application can alter them), and no level of security is enforced. Users can modify files by either using a file manager application or connecting the device to a computer via a USB cable and mounting the device as external storage. Before you work with external storage, check the current state of the external storage with the Environment object, using a call to getExternalStorageState() to check whether the media is available."\n\n"In Android 2.2, a new set of methods was introduced to handle external files. The main method is a call on the Context object – getExternal FilesDir(). This call takes a string parameter as a key to help define the type of media you’re saving, such as ringtones, music, or photos."\n\n"✓ SQLite database : A lightweight SQL database implementation that’s available across various platforms (including Android, iPhone, Windows, Linux, and Mac) and fully supported by Android. You can create tables and perform SQL queries against the tables accordingly. You implement an SQLite database in this chapter to handle the persistence of the tasks in the Task Reminder application."\n\n"✓ Content provider : A “wrapper” around another storage mechanism. A content provider is used by an app to read and write application data that can be stored in preferences, files, or SQLite databases, for example."\n\n"✓ Network connection: (Also known as remote storage.) Any remote data source that you have access to. For example, because Flickr exposes an API that allows you to store images on its servers, your application might work with Flickr to store images. If your application works with a popular tool on the Internet (such as Twitter, Facebook, or Basecamp), your app might send information via HTTP – or any other protocol you deem necessary – to third-party APIs to store the data.</item>
        <item>There are 7 life-cycle methods of activity. They are as follows:"\n\n" ✓ onCreate()"\n" ✓ onStart()"\n" ✓ onResume()"\n" ✓ onPause()"\n" ✓ onStop()"\n" ✓ onRestart()"\n" ✓ onDestroy() </item>
        <item>Android Architecture is made up of 4 key components:"\n" – Linux Kernel"\n" – Libraries"\n" – Android Framework"\n" – Android Applications</item>
        <item>Containers, as the name itself implies, holds objects and widgets together, depending on which specific items are needed and in what particular arrangement that is wanted. Containers may hold labels, fields, buttons, or even child containers, as examples.</item>
        <item>Adb is short for Android Debug Bridge. It allows developers the power to execute remote shell commands. Its basic function is to allow and control communication towards and from the emulator port.</item>
        <item>The main components of Android are:"\n\n" 1) Activity"\n" 2) Intent"\n" 3) Service"\n" 4) Broadcast receiver"\n" 5) Content Provider</item>
        <item>Services are components that do not have a User Interface; they run in the background. An example of Service component in Facebook app would be the friend request notifications. They would continue to run, even if you switch to another activity or application.</item>
        <item>Content provider is a data store that enables data sharing across different applications. Content providers provide a uniform interface to access the data. An example is Call logs.</item>
        <item> A Broadcast receiver comes into action only in specific situations. Suppose an Intent for which a particular broadcast receiver has been registered occurs, the broadcast receiver is triggered into action and the user gets a notification for the same. (For example: Battery low notification) "\n\n"You’ll get a walk-through of the entire process using examples, in Edureka’s Android for beginners training.</item>
        <item>Portable Wi-Fi Hotspot allows you to share your mobile internet connection to other wireless device. For example, using your Android-powered phone as a Wi-Fi Hotspot, you can use your laptop to connect to the Internet using that access point.</item>
        <item>A Sticky Intent is a broadcast from sendStickyBroadcast() method such that the intent floats around even after the broadcast, allowing others to collect data from it.</item>
        <item>A project under Android development, upon compilation, becomes an .apk file. This apk file format is actually made up of the AndroidManifest.xml file, application code, resource files, and other related files.</item>
        <item>Activities can be closed, or terminated anytime the user wishes. On the other hand, services are designed to run behind the scenes, and can act independently. Most services run continuously, regardless of whether there are certain or no activities being executed.</item>
        <item>Also referred to simply as Widgets, App Widgets in the Android world are miniature views that are embedded within Android apps and typically display periodic updates. Music players, weather updates, sports scores, and stock price changes are all examples of data that can be displayed in an App Widget.</item>
        <item>Android Interface Definition Language. It offers to define the client’s interface requirements and moreover a service in order to communicate at same level with the help of inter process communications.</item>
        <item>The developer should name at least 4 of these 6 items below, as these are essential within each Android project:"\n\n"1. AndroidManifest.xml"\n"2. build.xml"\n"3. bin/"\n"4. src/"\n"5. res/"\n"6. assets/</item>
    </string-array>

</resources>